#Trainset
Trainset is a base rails app that is already set up with the plugins that you usually want when starting a project. 
Often I want to explore an idea I have to see if it has any merit but I usually find myself put off by the need to 
set up user login, or sprites for the images, etc. While some of this isn't strictly neccessary I prefer to work in 
an environment as similar to production apps as possible. This project is designed to let you jump into the 'good parts' 
of your idea and not need to refactor later.

Current rails version is 3.2.3

Trainset issues and suggestions can be submitted at [http://peregrinator.lighthouseapp.com/projects/22758-trainset/overview](http://peregrinator.lighthouseapp.com/projects/22758-trainset/overview)

### Why is it called trainset?

According to wikipedia, in the US, "the term trainset refers to a group of rolling stock that is permanently or semi-permanently coupled together to form a unified set of equipment".
This seems like an appropriate description for what this project is intended to be -- and rails needs more projects with names related to train terminology don't you think...?


### Using Trainset

1. Clone the git repository using

     `git clone git@github.com:peregrinator/trainset.git`
     
2. We recommend you keep a link to this project as part of your git repository so you can easily fetch and merge enhancements and bug fixes into your project. 

     `git remote add trainset git@github.com:peregrinator.git`
     
     In the future you can run `git pull trainset` to receive updates 

3. Initialize the submodules and pull them into the project

     `git submodule init`
     `git submodule update`



### Pre-configured Gems

Major gems will be listed here and have been included in the app Gemfile.

#### Devise

Provide authentication - sign in, sign up, reset password, etc.

#### Bootstrap-Sass (Twitter Bootstrap)

Framework providing a grid and standard styles helpful when getting started and easily customizable. Coverted to use Sass instead of the Less that Twitter maintains.

#### Formtastic

Easy semantic forms - proper markup with most options available by default, easily customized and new input types are easy to add

#### Compass-Rails

Compass framework for rails - mainly used for the built in spriting of images.

### Sprites

The app is set up for basic spriting of images (combining multiple images into a single image with proper spacing).
Currently the preferred method is to place images in directories with the desired name for the final sprite. This
allows the creation of a generic sprite used by the app as a whole and secondary sprites for areas that most users 
won't see or access very often (like an admin area).

For the generic stylesheet I would place images in  app/assets/images/trainset/ and then run,
  `compass sprite -c config/compass.rb "app/assets/images/trainset/*.png" --force`
from the project root dir. This will create a compass sprite .scss file in app/assets/images/sprites named 
_trainset.scss. In the application.css.scss we would add (or uncomment) the lines,
  $trainset-spacing: 50px;
  @import "sprites/_trainset.scss";
replacing 'trainset' with the name of your sprite (determined from the folder path above). Before loading the scss file 
you can define compass spriting variables (like $trainset-spacing) to customize how a sprite is created - we've found 
that 50px of spacing between images in the sprite works the majority of the time for us.

### IE Stylesheets

The current strategy in place for IE quirks is to load a base IE stylesheet for the currently supported version and
below (currently ie9 and below). For each IE version below that we do load a stylesheet for that version and all 
versions below that. This allows styles to cascade down through the versions and only need to be defined at one level. 
The reasoning being that IE 8, 7 and 6 often share similar style fixes and at other times they just need to be applied to 
7 and 6. Your mileage may vary depending on how many versions of IE you need to support.
